# .github/workflows/prod-pipeline.yml
# This is a github action pipeline for production.
name: Production Deployment
on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false
# Jobs
jobs:
  unit-test:
    runs-on: ubuntu-latest
    env:
      CI: true
      build_env: production
    steps:
    # Checkout the code
    - uses: actions/checkout@v2
    # Run Tests
    - name: Run Unit Tests
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - run: |
        yarn
        yarn test --watchAll=false
  build:
      strategy:
        matrix:
          include:
          - env: stage
            bucket: app0126-stage.zero-david.online
          - env: production
            bucket: app0126.zero-david.online
      outputs:
        needs-approval: "${{ steps.needs-approval.outputs.needs-approval }}"
        approved-deploy: "${{ steps.approved-deploy.outputs.approved-deploy }}"
      needs: unit-test
      runs-on: ubuntu-latest
      env:
        CI: true
      steps:
      # Checkout the code
        - uses: actions/checkout@v2
      # Build Code
        - name: Build Static Site
          uses: actions/setup-node@v1
          with:
            node-version: 12.x
        - run: |
            yarn
            yarn build
            ls -al
          env:
            REACT_APP_CONFIG: ${{ matrix.env }}
      # Upload build to github artifact
        - name: Upload build artifact to Github
          uses: actions/upload-artifact@v1
          with:
            name: build-artifact-${{ matrix.env }}
            path: build/
        - name: needs-approval
          id: needs-approval
          if: ${{ matrix.env == 'production' }}
          run: echo "::set-output name=needs-approval::{\"include\":[{\"env\":\"${{ matrix.env }}\",\"buildName\":\"build-artifact-${{ matrix.env }}\",\"bucket\":\"app0126.zero-david.online\"}]}"
        - name: approved-deploy
          id: approved-deploy
          if: ${{ matrix.env == 'stage' }}
          run: echo "::set-output name=approved-deploy::{\"include\":[{\"env\":\"${{ matrix.env }}\",\"buildName\":\"build-artifact-${{ matrix.env }}\",\"bucket\":\"app0126-stage.zero-david.online\"}]}"
  deploy:
      name: Deploy
      runs-on: ubuntu-latest
      needs: build
      strategy:
        matrix: ${{ fromJSON(needs.build.outputs.approved-deploy) }}
      env:
        region: "us-east-2"
      steps:
      # Checkout the code
      - uses: actions/checkout@v2
      # Configure Aws account for S3 Sync
      - name: Configure AWS credentials for S3 sync
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      # Upload build to github artifact
      - name: Download build artifact from Github
        uses: actions/download-artifact@v1
        with:
          name: build-artifact-${{ matrix.env }}
          path: build/
      - uses: ./.github/actions/deploy
        id: deploy
        with:
          bucket: ${{ matrix.bucket }}
          region: us-east-2
          artifact_name: build-artifact-${{ matrix.env }}
          env: ${{ matrix.env }}
  # production-deploy:
  #   needs: [build, deploy]
  #   runs-on: ubuntu-latest
  #   name: production-deploy
  #   env:
  #     region: "us-east-2"
  #   strategy:
  #     matrix: ${{ fromJSON(needs.build.outputs.needs-approval) }}
  #   steps:
  #   # Checkout the code
  #     - uses: actions/checkout@v2
  #     # Configure Aws account for S3 Sync
  #     - name: Configure AWS credentials for S3 sync
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ env.region }}
  #     # Upload build to github artifact
  #     - name: Download build artifact from Github
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: build-artifact-${{ matrix.env }}
  #         path: build/
  #     # Deploy to s3
  #     - name: Sync with S3
  #       run: |
  #         cd build
  #         aws s3 sync . s3://${{ matrix.bucket }}
  #     # Invalidate Cloudfront
  #     - name: Invalidate Cloudfront
  #       run: |
  #         export DIST_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[?@=='${{ matrix.bucket }}']].Id | [0]" | tr -d '"')
  #         aws cloudfront create-invalidation --distribution-id ${DIST_ID} --paths "/*"